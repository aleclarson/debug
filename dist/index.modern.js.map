{"version":3,"file":"index.modern.js","sources":["../src/couleur.ts","../src/index.ts","../src/helpers.ts"],"sourcesContent":["/**\n * couleur util API\n */\nfunction initCouleur() {\n  const _close = \"\\u001B[39m\"\n\n  /**\n   * Wrapper for ansi 256 code\n   * @param code\n   */\n  const _wrapAnsi256 = (code) => `\\u001B[${38};5;${code}m`\n\n  /**\n   * Convert RGB color to ansi 256\n   * @param red\n   * @param green\n   * @param blue\n   */\n  const _rgbToAnsi256 = (red: number, green: number, blue: number): number => {\n    if (red === green && green === blue) {\n      if (red < 8) return 16\n      if (red > 248) return 231\n      return Math.round(((red - 8) / 247) * 24) + 232\n    }\n    return (\n      16 +\n      36 * Math.round((red / 255) * 5) +\n      6 * Math.round((green / 255) * 5) +\n      Math.round((blue / 255) * 5)\n    )\n  }\n\n  /**\n   * Color string with rbg color\n   * ex: couleur.rbg(255,0,0)('foo')\n   */\n  const rgb =\n    (r: number, g: number, b: number) =>\n    (str: string): string =>\n      _wrapAnsi256(_rgbToAnsi256(r, g, b)) + str + _close\n\n  /**\n   * Bold text\n   * @param str\n   */\n  const bold = (str: string): string => \"\\x1B[1m\" + str + \"\\x1B[22m\"\n\n  return {\n    rgb,\n    bold,\n  }\n}\n\nconst couleur = initCouleur()\nexport default couleur\n","import path from \"path\"\nimport couleur from \"./couleur\"\nimport { getCallerFile, randomRgbColor } from \"./helpers\"\n\n/**\n * debug\n * @param rest\n */\nexport const debugConfig = {\n  enable: true,\n}\n\nconst keeper = {}\n\n/**\n * debug\n * @param rest\n */\nexport function debug(...rest: any[]) {\n  if (!debugConfig.enable) return\n\n  const file = getCallerFile()\n  const fileName = path.basename(file)\n  const rgb = randomRgbColor()\n\n  let selected\n  if (keeper?.[fileName]) {\n    selected = keeper[fileName].split(\"-\")\n  } else {\n    selected = rgb\n    keeper[fileName] = rgb.join(\"-\")\n  }\n\n  // TODO select persistante color depend of name\n  // TODO add custom namespace\n  // TODO test browser\n\n  return console.log(\n    `  `,\n    couleur.bold(couleur.rgb(selected[0], selected[1], selected[2])(fileName)),\n    ``,\n    ...rest\n  )\n}\n","/**\n * retrive caller function file path\n */\nexport function getCallerFile(): string {\n  const originalFunc = Error.prepareStackTrace\n  let callerfile\n  try {\n    let err = new Error()\n    let currentfile\n    Error.prepareStackTrace = function (_, stack) {\n      return stack\n    }\n    currentfile = err.stack[\"shift\"]().getFileName()\n    while (err.stack.length) {\n      callerfile = err.stack[\"shift\"]().getFileName()\n      if (currentfile !== callerfile) break\n    }\n  } catch (e) {}\n  Error.prepareStackTrace = originalFunc\n  return callerfile\n}\n\n/**\n * get random HEX color\n */\nexport function randomHexColor(): string {\n  const letters = \"0123456789ABCDEF\"\n  let color = \"#\"\n  for (let i = 0; i < 6; i++) {\n    color += letters[Math.floor(Math.random() * 16)]\n  }\n  return color\n}\n\n/**\n * Get random RGB color\n */\nexport function randomRgbColor(): [number, number, number] {\n  const o = Math.round\n  const r = Math.random\n  const s = 255\n  return [o(r() * s), o(r() * s), o(r() * s)]\n}\n"],"names":["debugConfig","enable","keeper","debug","rest","file","originalFunc","Error","prepareStackTrace","callerfile","currentfile","err","_","stack","getFileName","length","e","getCallerFile","fileName","path","basename","rgb","o","Math","round","r","random","randomRgbColor","selected","split","join","console","log","g","b","str","_wrapAnsi256","blue","red","green","code"],"mappings":"oBAqDA,MC7CaA,EAAc,CACzBC,QAAQ,GAGJC,EAAS,YAMCC,KAASC,GACvB,IAAKJ,EAAYC,OAAQ,OAEzB,MAAMI,aCjBN,MAAMC,EAAeC,MAAMC,kBAC3B,IAAIC,EACJ,IACE,IACIC,EADAC,EAAM,IAAIJ,MAMd,IAJAA,MAAMC,kBAAoB,SAAUI,EAAGC,GACrC,OAAOA,GAETH,EAAcC,EAAIE,MAAJ,QAAqBC,cAC5BH,EAAIE,MAAME,SACfN,EAAaE,EAAIE,MAAJ,QAAqBC,cAC9BJ,IAAgBD,MAEtB,MAAOO,IAET,OADAT,MAAMC,kBAAoBF,EACnBG,EDEMQ,GACPC,EAAWC,EAAKC,SAASf,GACzBgB,aCeN,MAAMC,EAAIC,KAAKC,MACTC,EAAIF,KAAKG,OAEf,MAAO,CAACJ,EADE,IACAG,KAAUH,EADV,IACYG,KAAUH,EADtB,IACwBG,MDlBtBE,GAEZ,IAAIC,EAYJ,aAXI1B,GAAAA,EAASgB,GACXU,EAAW1B,EAAOgB,GAAUW,MAAM,MAElCD,EAAWP,EACXnB,EAAOgB,GAAYG,EAAIS,KAAK,MAOvBC,QAAQC,SDQuB,QARnCP,ECEwBG,EAAS,GDFtBK,ECE0BL,EAAS,GDFxBM,ECE4BN,EAAS,GDD3DO,IACCC,OArB+CC,EAqBdH,aArBdI,EAqBQb,MArBKc,EAqBFN,IApBXM,IAAUF,EACzBC,EAAM,KACNA,EAAM,QACHf,KAAKC,OAAQc,EAAM,GAAK,IAAO,IAAM,OAI5C,GAAKf,KAAKC,MAAOc,EAAM,IAAO,GAC9B,EAAIf,KAAKC,MAAOe,EAAQ,IAAO,GAC/BhB,KAAKC,MAAOa,EAAO,IAAO,MAWaF,EAnC5B,QAMOK,IAQCF,EAAaC,EAAeF,ICqBenB,GDMV,cCJnDd,GDIS+B,IARXV,EAAWQ,EAAWC"}